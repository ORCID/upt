environment:
  global:
    RUST_VERSION: stable
    CRATE_NAME: upt

  matrix:
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc
    # Testing other channels
    - TARGET: x86_64-pc-windows-msvc
      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% &&
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% &&
      cargo test --target %TARGET% --release &&
      cargo run --target %TARGET% -- list -i &&
      cargo run --target %TARGET% --release -- list -i
    )

before_deploy:
  - cargo rustc --target %TARGET% --release --bin upt -- -C lto
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: U6H1VMZp2WJqcjp6DMNYdyR5t7FajFOOWgQ70lNEpwFy/KbTe0ZuUw9tXjkUphKw
  description: ''
  on:
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

# notifications:
#   - provider: Email
#     to:
#       - sigoden@email.com
#     on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
